<Workspace Version="0.8.2.2392" X="-70.851349616716" Y="155.821163687476" zoom="1.24844365397223" Name="Element.Copy" Description="WARNING: Do not use this node in Automatic mode! Copy the input Revit elements with the help of a translation vector, similarly to the Geometry.Translate node." ID="cba6fef1-c536-4337-ba89-2a1aedbbbef2" Category="SpringNodes.Revit.Modify">
  <NamespaceResolutionMap>
    <ClassMap partialName="Rectangle" resolvedName="Autodesk.DesignScript.Geometry.Rectangle" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Sphere" resolvedName="Autodesk.DesignScript.Geometry.Sphere" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Cuboid" resolvedName="Autodesk.DesignScript.Geometry.Cuboid" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Vector" resolvedName="Autodesk.DesignScript.Geometry.Vector" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Plane.XY" resolvedName="Autodesk.DesignScript.Geometry.Plane" assemblyName="ProtoGeometry.dll" />
    <ClassMap partialName="Plane" resolvedName="Autodesk.DesignScript.Geometry.Plane" assemblyName="ProtoGeometry.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <DSIronPythonNode.PythonNode guid="07c44ee4-0bfc-458b-98f6-efbc66bd25a6" type="DSIronPythonNode.PythonNode" nickname="Python Script" x="249.199002696823" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" inputcount="2">
      <Script>#Copyright(c) 2016, Dimitar Venkov
# @5devene, dimitar.ven@gmail.com

import clr

clr.AddReference("RevitServices")
import RevitServices
from RevitServices.Persistence import DocumentManager
from RevitServices.Transactions import TransactionManager
doc = DocumentManager.Instance.CurrentDBDocument

clr.AddReference("RevitNodes")
import Revit
clr.ImportExtensions(Revit.Elements)
clr.ImportExtensions(Revit.GeometryConversion)

clr.AddReference("RevitAPI")
from Autodesk.Revit.DB import *

clr.AddReference("System")
from System.Collections.Generic import List as cList

def tolist(obj1):
	if hasattr(obj1,"__iter__"): return obj1
	else: return [obj1]

def output1(l1):
	if len(l1) == 1: return l1[0]
	else: return l1

elements = UnwrapElement(tolist(IN[0]))
vecs = tolist(IN[1])

oldId = []
for i in xrange(len(elements)):
	try: oldId.append(elements[i].Id)
	except: pass
oldId1 = cList[ElementId](oldId)
transforms = []
for i in xrange(len(vecs)):
	try: transforms.append(vecs[i].ToXyz(True))
	except: pass
	
def CopyEls(oldId1, transforms):
	out1 = []
	for i in xrange(len(transforms)):
		try:
			newId = ElementTransformUtils.CopyElements(doc, oldId1, transforms[i])
			if len(newId) == 1 :
				out1.append(doc.GetElement(newId[0]).ToDSType(False))
			else:
				[out1.append(doc.GetElement(newId[i]).ToDSType(False)) for i in xrange(len(newId))]
		except: out1.append([])
	return out1
	
TransactionManager.Instance.EnsureInTransaction(doc)
OUT = output1(CopyEls(oldId1, transforms))
TransactionManager.Instance.TransactionTaskDone()</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.Output guid="aca08315-87ef-44c6-9803-4da4b8812901" type="Dynamo.Nodes.Output" nickname="Output" x="398.218909571098" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False">
      <Symbol value="element(s)" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Symbol guid="ff0ecd91-e81d-4c57-b042-6b3a6d69447e" type="Dynamo.Nodes.Symbol" nickname="Input" x="89.5999999999999" y="-4.40000000000003" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True">
      <Symbol value="element(s)" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Symbol guid="813d0625-79a5-4345-b8cd-7bb2e8a0dcb9" type="Dynamo.Nodes.Symbol" nickname="Input" x="92.7240489683078" y="58.9725683837867" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True">
      <Symbol value="vector(s)" />
    </Dynamo.Nodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Models.ConnectorModel start="07c44ee4-0bfc-458b-98f6-efbc66bd25a6" start_index="0" end="aca08315-87ef-44c6-9803-4da4b8812901" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="ff0ecd91-e81d-4c57-b042-6b3a6d69447e" start_index="0" end="07c44ee4-0bfc-458b-98f6-efbc66bd25a6" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="813d0625-79a5-4345-b8cd-7bb2e8a0dcb9" start_index="0" end="07c44ee4-0bfc-458b-98f6-efbc66bd25a6" end_index="1" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="background_preview" eyeX="45.174999841575" eyeY="44.3223684674554" eyeZ="-54.4973683090304" lookX="-10" lookY="-10" lookZ="-10" />
  </Cameras>
</Workspace>