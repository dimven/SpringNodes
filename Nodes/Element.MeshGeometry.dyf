<Workspace Version="1.3.1.1736" X="760.58998405957" Y="101.86209573708" zoom="1.78359936238281" ScaleFactor="1" Name="Springs.Element.MeshGeometry" Description="Reads an element's geometry and converts it to either a Dynamo mesh or a toolkit mesh representation.  The node will return Dynamo meshes by default.&#xD;&#xA;&#xD;&#xA;The LOD input represents the triangulation factor. Its range is from 0 to 1. 0 is the lowest level of detail and 1 is the highest. It's set to 0 by default." ID="753fce74-3f5f-437b-9dc0-ac7fbedf9fbf" Category="Springs.Revit.Element">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="b43593b6-f80e-4330-9097-d375b23588f5" type="PythonNodeModels.PythonNode" nickname="Python Script" x="164.21840396063" y="25.2298811880499" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="3">
      <PortInfo index="0" default="False" />
      <PortInfo index="1" default="False" />
      <PortInfo index="2" default="False" />
      <Script>import clr

clr.AddReference('RevitServices')
from RevitServices.Persistence import DocumentManager
doc = DocumentManager.Instance.CurrentDBDocument

clr.AddReference('RevitNodes')
import Revit
clr.ImportExtensions(Revit.GeometryConversion)

clr.AddReference('RevitAPI')
import Autodesk.Revit.DB as DB

from System.Collections.Generic import List

indices = List[int]()
def toTkMesh(m, indices=indices, N=range(3)):
	verts = (v.ToPoint(1) for v in m.Vertices)
	indices.Clear()
	for i in xrange(m.NumTriangles):
		for j in N:
			indices.Add(m.Triangle[i].Index[j])
	
	return mtk.Mesh.ByVerticesAndIndices(verts, indices)

elems, tessFactor, asTkMesh = UnwrapElement(IN)
OUT = []
opt1 = DB.Options()

if asTkMesh:
	clr.AddReference('MeshToolkit')
	import Autodesk.Dynamo.MeshToolkit as mtk

def getMeshGeo(rvtGeo, geoList=None, opt1=opt1):
	if geoList is None:
		geoList = []
	for g in rvtGeo:
		if isinstance(g, DB.GeometryInstance):
			getMeshGeo(g.GetInstanceGeometry(), geoList)
		elif isinstance(g, DB.Mesh):
			geoList.append(g)
		elif isinstance(g, DB.Face):
			geoList.append(g.Triangulate(tessFactor))
		elif isinstance(g, DB.Solid):
			vol = getattr(g, 'Volume', 0)
			if vol &gt; 0:
				geoList.extend(f.Triangulate(tessFactor) for f in g.Faces)
	return geoList

for e in elems:
	meshGeo = getMeshGeo(e.Geometry[opt1])
	if asTkMesh:
		OUT.append(map(toTkMesh, meshGeo))
	else:
		OUT.append([m.Convert() for m in meshGeo])
opt1.Dispose()</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="13c18b99-9e34-479a-8400-8e21428cc8b9" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-121.664093729041" y="-1.68199207920334" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="element:var[]" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="0f47a35c-42b1-4f16-a5bc-232a74f3077d" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-123.346085808244" y="54.6871155118113" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="LOD: int = 0" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="4847d839-0f11-45b6-b047-929577d94699" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="-121.664093729041" y="110.495559076425" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="asToolkitMesh: bool = false" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="b09b374d-a8e8-4a03-a5c3-4e2296e3f173" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="306.030673267717" y="24.1085531352477" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="meshes" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="b43593b6-f80e-4330-9097-d375b23588f5" start_index="0" end="b09b374d-a8e8-4a03-a5c3-4e2296e3f173" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="13c18b99-9e34-479a-8400-8e21428cc8b9" start_index="0" end="b43593b6-f80e-4330-9097-d375b23588f5" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="0f47a35c-42b1-4f16-a5bc-232a74f3077d" start_index="0" end="b43593b6-f80e-4330-9097-d375b23588f5" end_index="1" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="4847d839-0f11-45b6-b047-929577d94699" start_index="0" end="b43593b6-f80e-4330-9097-d375b23588f5" end_index="2" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-17" eyeY="24" eyeZ="50" lookX="12" lookY="-13" lookZ="-58" upX="0" upY="1" upZ="0" />
  </Cameras>
</Workspace>