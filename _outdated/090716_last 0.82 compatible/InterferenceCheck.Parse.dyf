<Workspace Version="0.8.2.2392" X="-14.6078379895734" Y="199.68569470311" zoom="1.59077689706107" Name="InterferenceCheck.Parse" Description="Process a Revit interference check (HTML file) and extract the interference categories, all affected elements and the total number of clashes. If you are executing from a document different than the one the error report belongs to, be sure to set &quot;fetch_elements&quot; to false." ID="d0ea3d37-e270-4d77-af77-5e970177cc79" Category="SpringNodes.Revit.Utility">
  <NamespaceResolutionMap />
  <Elements>
    <DSIronPythonNode.PythonNode guid="4eec9315-409c-40b7-a5e2-9620d45396d0" type="DSIronPythonNode.PythonNode" nickname="Python Script" x="250" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" inputcount="2">
      <Script>import clr
import System
pf_path = System.Environment.GetFolderPath(System.Environment.SpecialFolder.ProgramFilesX86)
import sys
sys.path.append("%s\IronPython 2.7\Lib" %pf_path)

from sgmllib import SGMLParser
from collections import Counter
import re

class ReportParser(SGMLParser):
	def __init__(self, verbose=0):
		SGMLParser.__init__(self, verbose)
		self.data1 = []
		self.temp_data = []
	def handle_data(self, data):
		if data != "\n" and data not in known_errors:
			self.temp_data.append(data)
	def unknown_starttag(self, tag, attrs):
		if tag == "tr":
			self.data1.append(self.temp_data)
			self.temp_data = []

interference_cats = ("Structural Columns", "Air Terminals", "Assemblies", "Cable Tray Fittings", "Cable Tray Runs", "Cable Trays", "Casework", "Ceilings", "Columns", "Conduit Fittings", "Conduit Runs", "Conduits", "Curtain Panels", "Curtain Systems", "Curtain Wall Mullions","Doors", "Ducts", "Duct Accessories", "Duct Fittings", "Duct Insulations", "Duct Linings", "Duct Placeholders", "Duct Systems", "Electrical Circuits", "Electrical Equipment", "Electrical Fixtures", "Fabrication Parts", "Flex Ducts", "Flex Pipes", "Floors", "Furniture", "Furniture Systems", "Generic Models", "Gutters", "Lighting Devices", "Lighting Fixtures", "Mass Floors", "Mass", "Mechanical Equipment", "Pads", "Parts", "Pipe Accessories", "Pipe Fittings", "Pipe Insulations", "Pipe Placeholders", "Pipes", "Piping Systems",  "Plumbing Fixtures", "Railings", "Ramps", "Roofs", "Roof Soffits", "Shaft Openings", "Slab Edges", "Specialty Equipment", "Sprinklers", "Stairs", "Structural Connections", "Structural Foundations", "Structural Framing", "Structural Trusses", "Wall Sweeps", "Walls", "Windows", "Wires")

def extractId(list1):
	return [i for j in list1 for i in id_expression.findall(j)]
def pullElement(list1):
	out1 = []
	for i in list1:
		try: out1.append(doc.GetElement(ElementId(int(i))))
		except: out1.append(i)
	return out1
def fetchCat(l1):
	out1 = []
	for i in xrange(len(l1)):
		s1 = l1[i].split(" : ")[0].lstrip()
		if s1 in interference_cats: out1.append(s1)
	if len(out1) &gt; 1 : return " - ".join(out1)
	else: return "Unidentified"

report1 = IN[0]
fetch_elements = IN[1]

known_errors = ("  ", "td&gt;  ", "&amp;")
with open(report1, 'r') as f:
	read_data = f.read()
parser = ReportParser()
parser.feed(read_data)
parser.data1.append(parser.temp_data)
report_data = parser.data1[2:]
parser.close()
for i in xrange(len(report_data)): report_data[i].pop(0)
cases = map(fetchCat,report_data)
group_cases = Counter(cases).items()
unique_cases = [i[0] for i in group_cases]
sum_cases = [i[1] for i in group_cases]
sum_cases.append("Total interferences : %s"%sum(sum_cases))

#id_expression = re.compile("\D(\d{5,8})\D")
id_expression = re.compile(" id (.*)  ")
elements = map(extractId, report_data)

if fetch_elements:	#imports moved here to be able to process externally
	clr.AddReference("RevitServices")
	from RevitServices.Persistence import DocumentManager
	doc = DocumentManager.Instance.CurrentDBDocument
	clr.AddReference("RevitAPI")
	from Autodesk.Revit.DB import ElementId
	
	elements = map(pullElement, elements)

OUT = cases, elements, unique_cases, sum_cases</Script>
    </DSIronPythonNode.PythonNode>
    <Dynamo.Nodes.Output guid="ab2d997f-b3b3-4a95-9492-2e0760f69e41" type="Dynamo.Nodes.Output" nickname="Output" x="553.188179332924" y="-60.4131168930378" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False">
      <Symbol value="clash categories" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="3e68dcb7-669f-4117-8766-f69def7bbd7b" type="Dynamo.Nodes.Output" nickname="Output" x="551.308575251294" y="-4.56143881585757" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False">
      <Symbol value="affected elements" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.CodeBlockNodeModel guid="db6bc897-87f8-4e9c-b6a8-499a581be41d" type="Dynamo.Nodes.CodeBlockNodeModel" nickname="Code Block" x="390.873997154601" y="3.89396921238895" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" CodeText="res[0];&#xA;res[1];&#xA;res[2];&#xA;res[3];" ShouldFocus="false" />
    <Dynamo.Nodes.Output guid="ad7e0134-091f-4d5b-b87e-1fbc45de49c6" type="Dynamo.Nodes.Output" nickname="Output" x="552.898614855276" y="51.9736753754345" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False">
      <Symbol value="unique cases" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Output guid="1ba56061-69ae-429b-97e0-5cdbaefeebe3" type="Dynamo.Nodes.Output" nickname="Output" x="553.367326406458" y="108.508789566727" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False">
      <Symbol value="number of clashes" />
    </Dynamo.Nodes.Output>
    <Dynamo.Nodes.Symbol guid="a1ae85eb-fb64-490e-8a5a-75a7f2efaa1c" type="Dynamo.Nodes.Symbol" nickname="Input" x="132.30481980874" y="-16.1341503303799" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True">
      <Symbol value="report" />
    </Dynamo.Nodes.Symbol>
    <Dynamo.Nodes.Symbol guid="4bf2ce19-15cb-412f-8d11-c2776be574ad" type="Dynamo.Nodes.Symbol" nickname="Input" x="-49.5442858234158" y="40.6739503749328" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True">
      <Symbol value="fetch_elements : bool = true" />
    </Dynamo.Nodes.Symbol>
  </Elements>
  <Connectors>
    <Dynamo.Models.ConnectorModel start="4eec9315-409c-40b7-a5e2-9620d45396d0" start_index="0" end="db6bc897-87f8-4e9c-b6a8-499a581be41d" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="db6bc897-87f8-4e9c-b6a8-499a581be41d" start_index="0" end="ab2d997f-b3b3-4a95-9492-2e0760f69e41" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="db6bc897-87f8-4e9c-b6a8-499a581be41d" start_index="1" end="3e68dcb7-669f-4117-8766-f69def7bbd7b" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="db6bc897-87f8-4e9c-b6a8-499a581be41d" start_index="2" end="ad7e0134-091f-4d5b-b87e-1fbc45de49c6" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="db6bc897-87f8-4e9c-b6a8-499a581be41d" start_index="3" end="1ba56061-69ae-429b-97e0-5cdbaefeebe3" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="a1ae85eb-fb64-490e-8a5a-75a7f2efaa1c" start_index="0" end="4eec9315-409c-40b7-a5e2-9620d45396d0" end_index="0" portType="0" />
    <Dynamo.Models.ConnectorModel start="4bf2ce19-15cb-412f-8d11-c2776be574ad" start_index="0" end="4eec9315-409c-40b7-a5e2-9620d45396d0" end_index="1" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="background_preview" eyeX="10" eyeY="15" eyeZ="10" lookX="-10" lookY="-10" lookZ="-10" />
  </Cameras>
</Workspace>