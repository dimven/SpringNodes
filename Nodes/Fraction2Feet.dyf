<Workspace Version="1.3.2.2480" X="152.012074100287" Y="-57.1762560816646" zoom="0.889203022025036" ScaleFactor="1" Name="Springs.Fraction2Feet" Description="Converts a fractioned feet /inch string value into a decimal foot value." ID="1ef61c6d-ec1d-4a1f-b421-9ad87e5ca736" Category="Springs.Core.Units">
  <NamespaceResolutionMap>
    <ClassMap partialName="Math" resolvedName="DSCore.Math" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="String" resolvedName="DSCore.String" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="List" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="List.Scan" resolvedName="DSCore.List" assemblyName="DSCoreNodes.dll" />
    <ClassMap partialName="Math.Round" resolvedName="DSCore.Math" assemblyName="DSCoreNodes.dll" />
  </NamespaceResolutionMap>
  <Elements>
    <Dynamo.Graph.Nodes.CodeBlockNodeModel guid="0c0bd3f8-e201-43b5-b05e-6a25c4aa628e" type="Dynamo.Graph.Nodes.CodeBlockNodeModel" nickname="Code Block" x="347.207899908435" y="68.0962026724531" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" CodeText="num = [Imperative]{&#xA;s0 = &quot;&quot;;&#xA;s1 = String.TrimWhitespace(s1);&#xA;n1 = 0;&#xA;n2 = 0;&#xA;n3 = 0;&#xA;n4 = 0;&#xA;n5 = 0;&#xA;sign = 1;&#xA;if(String.StartsWith(s1,&quot;-&quot;,true))&#xA;{&#xA;	s1 = String.Substring(s1, 1,&#xA;	  String.Length(s1) - 1);&#xA;	sign = -1;&#xA;}&#xA;&#xA;if(String.Contains(s1,&quot;'&quot;,true))&#xA;{&#xA;	s0 = String.Split(s1,{&quot;'&quot;});&#xA;	n1 = String.ToNumber(s0[0]);&#xA;	s1 = String.TrimWhitespace(s0[1]);&#xA;}&#xA;if(String.Contains(s1,&quot; &quot;,true))&#xA;{&#xA;	s0 = String.Split(s1,{&quot; &quot;});&#xA;	n2 = String.ToNumber(s0[0])/12;&#xA;	s1 = s0[1];&#xA;}&#xA;if(String.Contains(s1,&quot;/&quot;,true))&#xA;{&#xA;	s0 = String.Split(s1,{&quot;/&quot;});&#xA;	n3 = String.ToNumber(s0[0]);&#xA;	n4 = String.ToNumber(&#xA;	String.Split(s0[1],{&quot;\&quot;&quot;})[0]);&#xA;}&#xA;elseif(!String.Contains(s1,&quot;/&quot;,true))&#xA;{&#xA;	n2 = String.ToNumber(&#xA;	String.Split(s1,{&quot;\&quot;&quot;})[0])/12;&#xA;}&#xA;if (n3 != 0 &amp;&amp; n4 != 0)&#xA;{&#xA;	n5 = (n3/n4)/12;&#xA;}&#xA;return = sign * (n1 + n2 + n5);&#xA;};" ShouldFocus="false">
      <PortInfo index="0" default="False" />
    </Dynamo.Graph.Nodes.CodeBlockNodeModel>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="8eacd47b-a743-4b20-8336-86e61f08b6d7" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="169.271862659019" y="61.1702307007633" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="fraction:var" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="57cbf9da-5ecd-4db3-ac39-c0f722de232e" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="764.939553019642" y="64.8655050159852" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <PortInfo index="0" default="False" />
      <Symbol value="number" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="0c0bd3f8-e201-43b5-b05e-6a25c4aa628e" start_index="0" end="57cbf9da-5ecd-4db3-ac39-c0f722de232e" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="8eacd47b-a743-4b20-8336-86e61f08b6d7" start_index="0" end="0c0bd3f8-e201-43b5-b05e-6a25c4aa628e" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="55.5282192569884" eyeY="195.783824846012" eyeZ="-51.2844799379119" lookX="-0.858967644938325" lookY="-87.9430536372463" lookZ="-60.7081984053477" upX="-0.00964871154219384" upY="0.731353701619171" upZ="-0.681930103084996" />
  </Cameras>
</Workspace>